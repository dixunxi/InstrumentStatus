#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstrumentStatusService.Dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbLSD")]
	public partial class InstrumentStatusDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbInstrumentStatus_ComputerType(tbInstrumentStatus_ComputerType instance);
    partial void UpdatetbInstrumentStatus_ComputerType(tbInstrumentStatus_ComputerType instance);
    partial void DeletetbInstrumentStatus_ComputerType(tbInstrumentStatus_ComputerType instance);
    partial void InserttbInstrumentStatus_Computer(tbInstrumentStatus_Computer instance);
    partial void UpdatetbInstrumentStatus_Computer(tbInstrumentStatus_Computer instance);
    partial void DeletetbInstrumentStatus_Computer(tbInstrumentStatus_Computer instance);
    partial void InserttbInstrumentStatus_Directory(tbInstrumentStatus_Directory instance);
    partial void UpdatetbInstrumentStatus_Directory(tbInstrumentStatus_Directory instance);
    partial void DeletetbInstrumentStatus_Directory(tbInstrumentStatus_Directory instance);
    #endregion
		
		public InstrumentStatusDBDataContext() : 
				base(global::InstrumentStatusService.Properties.Settings.Default.dbLSDConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentStatusDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentStatusDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentStatusDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentStatusDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbInstrumentStatus_ComputerType> tbInstrumentStatus_ComputerTypes
		{
			get
			{
				return this.GetTable<tbInstrumentStatus_ComputerType>();
			}
		}
		
		public System.Data.Linq.Table<tbInstrumentStatus_Computer> tbInstrumentStatus_Computers
		{
			get
			{
				return this.GetTable<tbInstrumentStatus_Computer>();
			}
		}
		
		public System.Data.Linq.Table<tbInstrumentStatus_Directory> tbInstrumentStatus_Directories
		{
			get
			{
				return this.GetTable<tbInstrumentStatus_Directory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbInstrumentStatus_ComputerType")]
	public partial class tbInstrumentStatus_ComputerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<tbInstrumentStatus_Computer> _tbInstrumentStatus_Computers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public tbInstrumentStatus_ComputerType()
		{
			this._tbInstrumentStatus_Computers = new EntitySet<tbInstrumentStatus_Computer>(new Action<tbInstrumentStatus_Computer>(this.attach_tbInstrumentStatus_Computers), new Action<tbInstrumentStatus_Computer>(this.detach_tbInstrumentStatus_Computers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstrumentStatus_ComputerType_tbInstrumentStatus_Computer", Storage="_tbInstrumentStatus_Computers", ThisKey="id", OtherKey="computertype_id")]
		public EntitySet<tbInstrumentStatus_Computer> tbInstrumentStatus_Computers
		{
			get
			{
				return this._tbInstrumentStatus_Computers;
			}
			set
			{
				this._tbInstrumentStatus_Computers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbInstrumentStatus_Computers(tbInstrumentStatus_Computer entity)
		{
			this.SendPropertyChanging();
			entity.tbInstrumentStatus_ComputerType = this;
		}
		
		private void detach_tbInstrumentStatus_Computers(tbInstrumentStatus_Computer entity)
		{
			this.SendPropertyChanging();
			entity.tbInstrumentStatus_ComputerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbInstrumentStatus_Computer")]
	public partial class tbInstrumentStatus_Computer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _system_name;
		
		private string _runtime_location;
		
		private string _runtime_version;
		
		private System.Nullable<System.DateTime> _last_ran;
		
		private bool _is_active;
		
		private int _computertype_id;
		
		private EntitySet<tbInstrumentStatus_Directory> _tbInstrumentStatus_Directories;
		
		private EntityRef<tbInstrumentStatus_ComputerType> _tbInstrumentStatus_ComputerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsystem_nameChanging(string value);
    partial void Onsystem_nameChanged();
    partial void Onruntime_locationChanging(string value);
    partial void Onruntime_locationChanged();
    partial void Onruntime_versionChanging(string value);
    partial void Onruntime_versionChanged();
    partial void Onlast_ranChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_ranChanged();
    partial void Onis_activeChanging(bool value);
    partial void Onis_activeChanged();
    partial void Oncomputertype_idChanging(int value);
    partial void Oncomputertype_idChanged();
    #endregion
		
		public tbInstrumentStatus_Computer()
		{
			this._tbInstrumentStatus_Directories = new EntitySet<tbInstrumentStatus_Directory>(new Action<tbInstrumentStatus_Directory>(this.attach_tbInstrumentStatus_Directories), new Action<tbInstrumentStatus_Directory>(this.detach_tbInstrumentStatus_Directories));
			this._tbInstrumentStatus_ComputerType = default(EntityRef<tbInstrumentStatus_ComputerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_system_name", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string system_name
		{
			get
			{
				return this._system_name;
			}
			set
			{
				if ((this._system_name != value))
				{
					this.Onsystem_nameChanging(value);
					this.SendPropertyChanging();
					this._system_name = value;
					this.SendPropertyChanged("system_name");
					this.Onsystem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runtime_location", DbType="VarChar(255)")]
		public string runtime_location
		{
			get
			{
				return this._runtime_location;
			}
			set
			{
				if ((this._runtime_location != value))
				{
					this.Onruntime_locationChanging(value);
					this.SendPropertyChanging();
					this._runtime_location = value;
					this.SendPropertyChanged("runtime_location");
					this.Onruntime_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runtime_version", DbType="VarChar(25)")]
		public string runtime_version
		{
			get
			{
				return this._runtime_version;
			}
			set
			{
				if ((this._runtime_version != value))
				{
					this.Onruntime_versionChanging(value);
					this.SendPropertyChanging();
					this._runtime_version = value;
					this.SendPropertyChanged("runtime_version");
					this.Onruntime_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_ran", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_ran
		{
			get
			{
				return this._last_ran;
			}
			set
			{
				if ((this._last_ran != value))
				{
					this.Onlast_ranChanging(value);
					this.SendPropertyChanging();
					this._last_ran = value;
					this.SendPropertyChanged("last_ran");
					this.Onlast_ranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit NOT NULL")]
		public bool is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computertype_id", DbType="Int NOT NULL")]
		public int computertype_id
		{
			get
			{
				return this._computertype_id;
			}
			set
			{
				if ((this._computertype_id != value))
				{
					if (this._tbInstrumentStatus_ComputerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomputertype_idChanging(value);
					this.SendPropertyChanging();
					this._computertype_id = value;
					this.SendPropertyChanged("computertype_id");
					this.Oncomputertype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstrumentStatus_Computer_tbInstrumentStatus_Directory", Storage="_tbInstrumentStatus_Directories", ThisKey="id", OtherKey="instrument_id")]
		public EntitySet<tbInstrumentStatus_Directory> tbInstrumentStatus_Directories
		{
			get
			{
				return this._tbInstrumentStatus_Directories;
			}
			set
			{
				this._tbInstrumentStatus_Directories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstrumentStatus_ComputerType_tbInstrumentStatus_Computer", Storage="_tbInstrumentStatus_ComputerType", ThisKey="computertype_id", OtherKey="id", IsForeignKey=true)]
		public tbInstrumentStatus_ComputerType tbInstrumentStatus_ComputerType
		{
			get
			{
				return this._tbInstrumentStatus_ComputerType.Entity;
			}
			set
			{
				tbInstrumentStatus_ComputerType previousValue = this._tbInstrumentStatus_ComputerType.Entity;
				if (((previousValue != value) 
							|| (this._tbInstrumentStatus_ComputerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbInstrumentStatus_ComputerType.Entity = null;
						previousValue.tbInstrumentStatus_Computers.Remove(this);
					}
					this._tbInstrumentStatus_ComputerType.Entity = value;
					if ((value != null))
					{
						value.tbInstrumentStatus_Computers.Add(this);
						this._computertype_id = value.id;
					}
					else
					{
						this._computertype_id = default(int);
					}
					this.SendPropertyChanged("tbInstrumentStatus_ComputerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbInstrumentStatus_Directories(tbInstrumentStatus_Directory entity)
		{
			this.SendPropertyChanging();
			entity.tbInstrumentStatus_Computer = this;
		}
		
		private void detach_tbInstrumentStatus_Directories(tbInstrumentStatus_Directory entity)
		{
			this.SendPropertyChanging();
			entity.tbInstrumentStatus_Computer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbInstrumentStatus_Directory")]
	public partial class tbInstrumentStatus_Directory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _instrument_id;
		
		private string _directory_location;
		
		private string _file_wildcard;
		
		private System.Nullable<System.DateTime> _last_file_modified_date;
		
		private string _last_file_modified_name;
		
		private int _injection_interval;
		
		private EntityRef<tbInstrumentStatus_Computer> _tbInstrumentStatus_Computer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oninstrument_idChanging(int value);
    partial void Oninstrument_idChanged();
    partial void Ondirectory_locationChanging(string value);
    partial void Ondirectory_locationChanged();
    partial void Onfile_wildcardChanging(string value);
    partial void Onfile_wildcardChanged();
    partial void Onlast_file_modified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_file_modified_dateChanged();
    partial void Onlast_file_modified_nameChanging(string value);
    partial void Onlast_file_modified_nameChanged();
    partial void Oninjection_intervalChanging(int value);
    partial void Oninjection_intervalChanged();
    #endregion
		
		public tbInstrumentStatus_Directory()
		{
			this._tbInstrumentStatus_Computer = default(EntityRef<tbInstrumentStatus_Computer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instrument_id", DbType="Int NOT NULL")]
		public int instrument_id
		{
			get
			{
				return this._instrument_id;
			}
			set
			{
				if ((this._instrument_id != value))
				{
					if (this._tbInstrumentStatus_Computer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninstrument_idChanging(value);
					this.SendPropertyChanging();
					this._instrument_id = value;
					this.SendPropertyChanged("instrument_id");
					this.Oninstrument_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directory_location", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string directory_location
		{
			get
			{
				return this._directory_location;
			}
			set
			{
				if ((this._directory_location != value))
				{
					this.Ondirectory_locationChanging(value);
					this.SendPropertyChanging();
					this._directory_location = value;
					this.SendPropertyChanged("directory_location");
					this.Ondirectory_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_wildcard", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string file_wildcard
		{
			get
			{
				return this._file_wildcard;
			}
			set
			{
				if ((this._file_wildcard != value))
				{
					this.Onfile_wildcardChanging(value);
					this.SendPropertyChanging();
					this._file_wildcard = value;
					this.SendPropertyChanged("file_wildcard");
					this.Onfile_wildcardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_file_modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_file_modified_date
		{
			get
			{
				return this._last_file_modified_date;
			}
			set
			{
				if ((this._last_file_modified_date != value))
				{
					this.Onlast_file_modified_dateChanging(value);
					this.SendPropertyChanging();
					this._last_file_modified_date = value;
					this.SendPropertyChanged("last_file_modified_date");
					this.Onlast_file_modified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_file_modified_name", DbType="VarChar(255)")]
		public string last_file_modified_name
		{
			get
			{
				return this._last_file_modified_name;
			}
			set
			{
				if ((this._last_file_modified_name != value))
				{
					this.Onlast_file_modified_nameChanging(value);
					this.SendPropertyChanging();
					this._last_file_modified_name = value;
					this.SendPropertyChanged("last_file_modified_name");
					this.Onlast_file_modified_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_injection_interval", DbType="Int NOT NULL")]
		public int injection_interval
		{
			get
			{
				return this._injection_interval;
			}
			set
			{
				if ((this._injection_interval != value))
				{
					this.Oninjection_intervalChanging(value);
					this.SendPropertyChanging();
					this._injection_interval = value;
					this.SendPropertyChanged("injection_interval");
					this.Oninjection_intervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstrumentStatus_Computer_tbInstrumentStatus_Directory", Storage="_tbInstrumentStatus_Computer", ThisKey="instrument_id", OtherKey="id", IsForeignKey=true)]
		public tbInstrumentStatus_Computer tbInstrumentStatus_Computer
		{
			get
			{
				return this._tbInstrumentStatus_Computer.Entity;
			}
			set
			{
				tbInstrumentStatus_Computer previousValue = this._tbInstrumentStatus_Computer.Entity;
				if (((previousValue != value) 
							|| (this._tbInstrumentStatus_Computer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbInstrumentStatus_Computer.Entity = null;
						previousValue.tbInstrumentStatus_Directories.Remove(this);
					}
					this._tbInstrumentStatus_Computer.Entity = value;
					if ((value != null))
					{
						value.tbInstrumentStatus_Directories.Add(this);
						this._instrument_id = value.id;
					}
					else
					{
						this._instrument_id = default(int);
					}
					this.SendPropertyChanged("tbInstrumentStatus_Computer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
