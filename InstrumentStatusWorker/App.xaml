<Application x:Class="InstrumentStatusWorker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:InstrumentStatusWorker"
             xmlns:converter="clr-namespace:SafireMvvm.Controls.Converter;assembly=SafireMvvm"
             Startup="App_OnStartUp">
    <Application.Resources>
        <converter:RadioButtonBoolToIntConverter x:Key="RadioButtonBoolToIntConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisiblityConverter" />
        <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisiblityConverter" />
        <converter:WidthConverter x:Key="WidthConverter" />
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converter:HeightConverter x:Key="HeightConverter" />
        <converter:IsNullOrEmptyVisiblilityConverter x:Key="IsNullOrEmptyVisiblilityConverter" />
        <!--Have Austin explain how these SafireMvvm converters above work-->

        <Style TargetType="MenuItem" x:Key="DatabaseModeStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DatabaseMode}" Value="Dev">
                    <Setter Property="Background"  Value="LightGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DatabaseMode}" Value="Cert">
                    <Setter Property="Background"  Value="LightYellow" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DatabaseMode}" Value="Prod">
                    <Setter Property="Background" Value="LightSalmon" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListBox" x:Key="Base-ListBox">
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style TargetType="Button" x:Key="Base-Button">
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="Margin" Value="10,0,10,0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource Base-Button}" x:Key="Danger-Button">
            <Setter Property="Background" Value="Salmon" />
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource Base-Button}" x:Key="Action-Button">
            <Setter Property="Background" Value="LightCyan" />
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource Base-Button}" x:Key="Success-Button">
            <Setter Property="Background" Value="LightGreen" />
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource Base-Button}" x:Key="Nav-Button">
            <Setter Property="Height" Value="32" />
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style TargetType="ComboBox" x:Key="Base-ComboBox">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Height" Value="28" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="CheckBox" x:Key="Base-CheckBox">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Height" Value="28" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style TargetType="TextBox" x:Key="Base-Textbox">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Height" Value="28" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBlock" x:Key="Bold-TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style TargetType="TextBlock" x:Key="Base-TextBlock">
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style TargetType="TextBlock" x:Key="Error-TextBlock">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Margin" Value="4" />
        </Style>
    </Application.Resources>
</Application>
